#ifndef C_GRAPHICS_H
#define C_GRAPHICS_H
//====================================================================================================
//класс рисования в буфере изображения
//====================================================================================================

//====================================================================================================
//подключаемые библиотеки
//====================================================================================================
#include <string.h>
#include <stdint.h>

//====================================================================================================
//макроопределения
//====================================================================================================
#define FONT_WIDTH  8
#define FONT_HEIGHT 8

//====================================================================================================
//класс рисования в буфере изображения
//====================================================================================================
class CGraphics
{
 protected:
  //-Переменные класса-------------------------------------------------------  
  uint8_t *VideoPtr;//указатель на видеобуфер (RGBA)
  uint32_t ScreenWidth;//ширина изображения
  uint32_t ScreenHeight;//высота изображения
  uint32_t LineSize;//расмер строки изображения
 public:
  //-Конструктор класса------------------------------------------------------
  CGraphics(void);
  //-Деструктор класса-------------------------------------------------------
  ~CGraphics();
  //-Функции класса----------------------------------------------------------
  void Init(uint8_t*video_ptr,uint32_t screen_width,uint32_t screen_height);//инициализация
  void PutSymbol(uint32_t x,uint32_t y,char symbol,uint32_t color);//вывод символа в позицию
  void PutString(uint32_t x,uint32_t y,const char *string,uint32_t color);//вывод строчки в позицию
  void SolidFill(uint32_t x,uint32_t y,uint32_t width,uint32_t height,uint32_t color);//закрасить прямоугольник
  void PutSymbolInversion(uint32_t x,uint32_t y,char symbol);//вывод символа в позицию с инверсией цвета
  void PutStringInversion(uint32_t x,uint32_t y,const char *string);//вывод строчки в позицию с инверсией цвета
  void DrawPointInversion(uint32_t x,uint32_t y);//поставить точку в позицию с инверсией цвета

};

#endif

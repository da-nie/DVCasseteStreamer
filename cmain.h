#ifndef C_MAIN_H
#define C_MAIN_H

//====================================================================================================
//основной класс программы
//====================================================================================================

//====================================================================================================
//подключаемые библиотеки
//====================================================================================================
#include <memory>
#include <string>

#include "cthreadmain.h"
#include "craiiccriticalsection.h"

//====================================================================================================
//основной класс программы
//====================================================================================================
class CMain
{
 public:
  //режим работы
  enum MODE
  {
   MODE_WAIT,//режим ожидания
   MODE_INSERT_TO_DV,//запустить режим сборки файлов в dv-видеофайл
   MODE_EXTRACT_DV//запустить режим извлечения файлов из dv-файла
  };
 public:
  struct SMode
  {
   MODE Mode;//режим работы
   std::string Path;//каталог, в котором находятся добавляемые файлы
   std::string OutputFileName;//имя выходного dv-файла
   std::string InputFileName;//имя входного dv-файла 
   std::string LogoFileName;//имя файла логотипа
   std::string ProgrammFileName;//имя файла программы
   CDVTime cDVTime;//время создания файла
   uint32_t Prefix;//величина префикса
  };
 private:
  //-Переменные класса----------------------------------------------------------------------------------
  std::unique_ptr<CThreadMain> cThreadMain_Ptr;//указатель на класс потока
  //структура защищённых переменных
  struct SProtected
  {
   SMode sMode;//режим работы
   bool IsProcessing;//производится ли обработка
   CCriticalSection cCriticalSection;//критическая секция для доступа к элементам
  } sProtected;
 public:
  //-Конструктор класса---------------------------------------------------------------------------------
  CMain(void);
  //-Деструктор класса----------------------------------------------------------------------------------
  ~CMain();
 public:
  //-Открытые функции класса----------------------------------------------------------------------------
  void OnTimer(std::string &answer);//событие таймера
  void InsertData(CDVTime &cDVTime,const std::string &path,const std::string &output_file_name,const std::string &programm_file_name,const std::string &logo_file_name,uint32_t prefix);//собрать данные в dv-файл
  void ExtractData(const std::string &path,const std::string &input_file_name);//извлечь данные из dv-файла  
  void GetMode(SMode &sMode);//получить режим работы
  void ClearMode(void);//очистить режим работы (установить режим ожидания)
  void GetAndClearMode(SMode &sMode);//получить режим работы и очистить его
  void SetProcessingState(bool state);//задать, производится ли обработка
  bool IsProcessing(void);//получить, производится ли обработка
  void Break(void);//прервать обработку
 private:
  //-Закрытые функции класса----------------------------------------------------------------------------  
};

#endif
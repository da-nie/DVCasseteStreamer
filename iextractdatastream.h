#ifndef I_EXTRACT_DATA_STREAM_H
#define I_EXTRACT_DATA_STREAM_H

//====================================================================================================
//интерфейсный класс потока создания файлов при распаковке DV
//====================================================================================================

//====================================================================================================
//подключаемые библиотеки
//====================================================================================================
#include <stdint.h>
#include <string>

//====================================================================================================
//интерфейсный класс потока создания файлов при распаковке DV
//====================================================================================================
class IExtractDataStream
{
 private:
  //-Переменные класса----------------------------------------------------------------------------------
public:
  //-Конструктор класса---------------------------------------------------------------------------------
  //-Деструктор класса----------------------------------------------------------------------------------
  virtual ~IExtractDataStream() {};
 public:
  //-Открытые функции класса----------------------------------------------------------------------------
  virtual bool Create(const std::string &file_name)=0;//создать файл
  virtual void Close(void)=0;//закрыть файл
  virtual bool Write(uint8_t *buffer_ptr,size_t size)=0;//записать данные в файл
  virtual void AddAnswer(const std::string &answer)=0;//добавить к ответу строку
  virtual void GetAnswer(std::string &answer)=0;//получить ответ
  virtual void GetAndClearAnswer(std::string &answer)=0;//получить ответ и очистить его
  virtual void ClearAnswer(void)=0;//очистить ответ
  virtual bool IsBreak(void)=0;//нужно ли завершать обработку
  virtual void SetBreak(bool state)=0;//задать, требуется ли завершение обработки
};

#endif

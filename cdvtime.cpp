//====================================================================================================
//подключаемые библиотеки
//====================================================================================================
#include "cdvtime.h"

//====================================================================================================
//конструктор класса
//====================================================================================================
CDVTime::CDVTime(void)
{ 
}
//====================================================================================================
//деструктор класса
//====================================================================================================
CDVTime::~CDVTime()
{
}

//====================================================================================================
//закрытые функции класса
//====================================================================================================

//====================================================================================================
//открытые функции класса
//====================================================================================================

//----------------------------------------------------------------------------------------------------
//задать врем€
//----------------------------------------------------------------------------------------------------
void CDVTime::Set(uint16_t year,uint8_t month,uint8_t day,uint8_t hour,uint8_t min,uint8_t sec)
{
 Year=year;
 Month=month;
 Day=day;
 Hour=hour;
 Min=min;
 Sec=sec;
}
//----------------------------------------------------------------------------------------------------
//получить врем€
//----------------------------------------------------------------------------------------------------
void CDVTime::Get(uint16_t &year,uint8_t &month,uint8_t &day,uint8_t &hour,uint8_t &min,uint8_t &sec) const
{
 year=Year;
 month=Month;
 day=Day;
 hour=Hour;
 min=Min;
 sec=Sec;
}
//----------------------------------------------------------------------------------------------------
//прошла одна секунда
//----------------------------------------------------------------------------------------------------
void CDVTime::AddSecond(void)
{
 Sec++;
 //корректируем врем€
 uint8_t day[12]={31,28,31,30,31,30,31,31,30,31,30,31};//число дней в мес€цах с €нвар€ по декабрь	
 //делаем коррекцию дл€ високосного года (опорный год - 2000, он високосный)
 if (((Year-2000)%4)==0) day[1]=29;
 if (Sec>=60)
 {
  Sec%=60;
  Min++;
  if (Min>=60)
  {
   Min%=60;
   Hour++;
   if (Hour>=24)
   {
    Hour%=24;
	Day++;
	if (Day>day[Month-1])
	{
     Day=1;
	 Month++;
	 if (Month>12)
	 {
	  Month=1;
	  Year++;
	 }
	}
   }
  }
 }  
}
//----------------------------------------------------------------------------------------------------
//перевести значение в двоично-дес€тичный код
//----------------------------------------------------------------------------------------------------
uint8_t CDVTime::CreateBCD(uint8_t value)
{
 return(((value/10)<<4)+(value%10));
}

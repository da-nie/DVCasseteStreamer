#ifndef C_DV_DIF_ID_H
#define C_DV_DIF_ID_H

//====================================================================================================
//класс работы с ID DIF-блока
//====================================================================================================

//====================================================================================================
//подключаемые библиотеки
//====================================================================================================

#include <stdint.h>
#include <stdio.h>
#include <string>

//====================================================================================================
//класс работы с ID DIF-блока
//====================================================================================================
class CDVDIFID
{
 public:
  //-Перечисления---------------------------------------------------------------------------------------
  //типы секций
  enum SCT_VALUE
  {
   SCT_HEADER=0,//заголовок
   SCT_SUBCODE=1,//суб-коды
   SCT_VAUX=2,//секция VAUX
   SCT_AUDIO=3,//секция аудио
   SCT_VIDEO=4//секция видео
  };
  //-Структуры------------------------------------------------------------------------------------------
  //биты внутри байта структуры заполняются от младшего к старшему! В документации они приведены наоборот!
  #pragma pack(1)
  //идентификатор DIF-блока
  struct SDIFID
  {
   //байт 0
   uint8_t Arb:4;//произвольные данные
   uint8_t Res1:1;//зарезервировано (всегда все биты 1)
   uint8_t SCT:3;//тип секции
   //байт 1
   uint8_t Res2:3;//зарезервировано (всегда все биты 1)
   uint8_t FSC:1;//для 50 Мбит: 0-первый канал, 1-второй; для 25 Мбит всегда 0
   uint8_t Dseq:4;//идентификатор DIF-блока в каждом канале
   //байт 2
   uint8_t DBN;//номер DIF-блока
  };
  #pragma pack()
 private:
  //-Переменные-----------------------------------------------------------------------------------------
  static const int32_t PAL_FRAME_RATE=25;
  static const int32_t NTSC_FRAME_RATE=30;
public:
  //-Конструктор класса---------------------------------------------------------------------------------
  CDVDIFID(void);
  //-Деструктор класса----------------------------------------------------------------------------------
  ~CDVDIFID();
 public:
  //-Открытые функции класса----------------------------------------------------------------------------  
  void SetHeaderSectionID(SDIFID *sDIFID_Ptr,uint8_t dif_sequence,uint8_t diff_block_number);//задать ID секции заголовка
  void SetSubCodeSectionID(SDIFID *sDIFID_Ptr,uint8_t dif_sequence,uint8_t diff_block_number);//задать ID секции суб-кодов
  void SetVAUXSectionID(SDIFID *sDIFID_Ptr,uint8_t dif_sequence,uint8_t diff_block_number);//задать ID секции vaux
  void SetVideoSectionID(SDIFID *sDIFID_Ptr,uint8_t dif_sequence,uint8_t diff_block_number);//задать ID секции видео
  void SetAudioSectionID(SDIFID *sDIFID_Ptr,uint8_t dif_sequence,uint8_t diff_block_number);//задать ID секции аудио
  void OutputToFile(FILE *file,const std::string &prefix,SDIFID *sDIFID_Ptr);//вывести в файл параметры заголовка
 private:
  //-Закрытые функции класса----------------------------------------------------------------------------  
  void SetID(SDIFID *sDIFID_Ptr,SCT_VALUE sct,uint8_t dif_sequence,uint8_t diff_block_number);//задать ID заголовка
};

#endif

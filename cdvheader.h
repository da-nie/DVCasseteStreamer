#ifndef C_DV_HEADER_H
#define C_DV_HEADER_H

//====================================================================================================
//класс работы с секцией header для dv-формата
//====================================================================================================

//====================================================================================================
//подключаемые библиотеки
//====================================================================================================

#include <stdint.h>
#include "cdvdifid.h"

//====================================================================================================
//класс работы с секцией header для dv-формата
//====================================================================================================
class CDVHeader
{
 public:
  //-Перечисления---------------------------------------------------------------------------------------
  //значения поля DFS
  enum DFS_VALUE
  {
   DFS_NTSC=0,
   DFS_PAL=1
  };
  //-Структуры------------------------------------------------------------------------------------------
  //биты внутри байта структуры заполняются от младшего к старшему! В документации они приведены наоборот!
  #pragma pack(1) 
  //данные DIF-блока в секции заголовка
  struct SDIFHeaderData
  {
   //байт 3
   uint8_t Res1:6;//зарезервировано (все биты в 1)
   uint8_t Zero:1;
   uint8_t DFS:1;//флаг последовательности блоков (0- NTSC,1-PAL)
   //байт 4
   uint8_t APT:3;//идентификатор трека для цифрового магнитофона, для иных источников данных все биты в 1
   uint8_t Res2:5;//зарезервировано (все биты в 1)
   //байт 5
   uint8_t AP1:3;//идентификатор трека для цифрового магнитофона, для иных источников данных все биты в 1
   uint8_t ResTF1:4;//зарезервировано (все биты в 1)
   uint8_t TF1:1;//флаг передачи аудио DIF-блоков (0-данные есть)
   //байт 6
   uint8_t AP2:3;//идентификатор трека для цифрового магнитофона, для иных источников данных все биты в 1
   uint8_t ResTF2:4;//зарезервировано (все биты в 1)
   uint8_t TF2:1;//флаг передачи VAUX и видео DIF-блоков (0-данные есть)
   //байт 7
   uint8_t AP3:3;
   uint8_t ResTF3:4;//зарезервировано (все биты в 1)
   uint8_t TF3:1;//флаг передачи суб-кодовых DIF-блоков (0-данные есть)
   //байты 8..79
   uint8_t ResArray[80-8];//зарезервировано (все биты в 1)
  };
  struct SHeader
  {
   CDVDIFID::SDIFID sDIFID;
   SDIFHeaderData sDIFHeaderData;
  };
  #pragma pack()
 private:
  //-Переменные-----------------------------------------------------------------------------------------  
  CDVDIFID cDVDIFID; 
 public:
  //-Конструктор класса---------------------------------------------------------------------------------
  CDVHeader(void);
  //-Деструктор класса----------------------------------------------------------------------------------
  ~CDVHeader();
 public:
  //-Открытые функции класса----------------------------------------------------------------------------
  void Set(SHeader *sHeader_Ptr,uint8_t dif_sequence,bool is_pal);//задать секцию заголовка
  void OutputToFile(FILE *file,const std::string &prefix,SHeader *sHeader_Ptr);//вывести в файл параметры секции
  static uint32_t GetSectionSize(void);//получить размер секции в байтах
  bool IsPAL(SHeader *sHeader_Ptr,bool &is_pal);//узнать, является ли заголовок заголовком режима PAL
  //-Закрытые функции класса----------------------------------------------------------------------------
};

#endif
